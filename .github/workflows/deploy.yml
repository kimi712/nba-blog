name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# 限制并发部署
concurrency:
  group: pages
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_ENV: production

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 设置超时时间

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # 浅克隆，加快速度
      
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      # 缓存依赖
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci  # 使用 ci 而不是 install，更快更可靠
        
      # 缓存构建输出
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            dist
            .cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
        
      - name: Build
        run: npm run build
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10  # 设置超时时间

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # 添加通知任务
  notify:
    needs: [deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Status
        if: ${{ needs.deploy.result != 'success' }}
        run: exit 1
